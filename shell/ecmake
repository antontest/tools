#! /bin/bash
# Name : ecmake
# Func : exec cmake project like make, make clean 
# Time : 2015-08-19 15:00:11

deb_maker (){
    if test ! -f ./CMakeLists.txt -o ! -f ./src/CMakeLists.txt ; then
        echo "Build path is wrong!"
        exit 1
    fi
    CURR_PATH=`pwd`
    SRC_BIN_PATH=${CURR_PATH}/
    SRC_LIB_PATH=$CURR_PATH/src/lib/
    SRC_INC_PATH=$CURR_PATH/src/include/
    SRC_BIN=`sed -n "/ADD_EXECUTABLE/Is/^.*(\(.*\)\ .*$/\1/gp" ./src/CMakeLists.txt`
    SRC_LIB=lib*
    SRC_INC=*.h
    DEB_FOLDER=$CURR_PATH/build/${SRC_BIN}_deb
    DEB_VERSION=1.0
    DEB_NAME=${SRC_BIN//_/-}
    deb-make -sbp $SRC_BIN_PATH -slp $SRC_LIB_PATH -sip $SRC_INC_PATH -sb $SRC_BIN -sl $SRC_LIB -si $SRC_INC -dp $DEB_FOLDER -dv $DEB_VERSION -dn $DEB_NAME
}

#if test $# -gt 2 ; then
#    echo -e "\033[1;31mUsage: `basename $0` [c | r | e | d | x | u]\033[0m"
#    echo -e "\033[1;31m       `basename $0` [clean | rebuild | del | exec | uninstall]\033[0m"
#    echo -e "\033[1;31mUsage: `basename $0` [-c | -r | -e | -d | -x | -u]\033[0m"
#    echo -e "\033[1;31m       `basename $0` [--clean | --rebuild | --del | --exec | --uninstall]\033[0m"
#    echo -e "\033[1;31mUsage: `basename $0` [i | -i | intall | --install] intall_path\033[0m"
#    exit 1
#fi

# find cmake files
test ! -e CMakeLists.txt && echo -e "\033[1;31mCould not find CMakeLists.txt!\033[0m" && exit 1
test ! -e CMakeLists.txt && echo -e "" && exit 1
cmake_files=`find -name CMakeLists.txt | sed "s/^\.\///g" | grep -v "^\..*"`
test -z "$cmake_files" && 
echo -e "\033[1;31mCould not find CMakeLists.txt!\033[0m" && 
exit 1

# get exec path and bin name
exec_path=`sed -n 's/^set\ *(executable_output_path\ *\(.*\))$/\1/Ip' $cmake_files | sed 's/\${project_source_dir}/.\//Ig'`
exec_name=`sed -n "/^add_execut.*/Is/.*(\(.*\)\ .*$/\1/pg" $cmake_files \
|| sed -n "/^target_link_lib.*/Is/.*(\(.*\)\ .*$/\1/pg" $cmake_files`
bin_path=`sed -n "/add_subdir.*/Is/.*\ \(.*\))$/\1/pg" $cmake_files`
test -z "$exec_path" && exec_path=build/$bin_path`test "${bin_path:((${#bin_path}-1)):1}" != "/" && echo "/"`
exec_cnt=`echo $exec_name | awk '{ print NF }'`

# cmake compile
if test $# -eq 0 ; then
     #if build is not existed, then create it
     test ! -d build && mkdir build

     #compile
     cd build && cmake .. && make && exit 0
     exit 1
fi

cmd=$1
shift
#test $# -eq 2 && test $exec_cnt -lt $2 && echo -e "\033[1;31mNo such many exec!\033[0m" && exit 1
case "$cmd" in
    "-c"|"c"|"clean"|"--clean")
        test -d build && cd build && make clean
        exit 0 ;;
    "-r"|"r"|"rebuild"|"--rebuild")
        $0 c ; $0
        exit 0 ;;
    "-d"|"d"|"delete"|"--delete")
        test -d build && cd build && make clean && cd ..
        find -iname build | xargs rm -rfv {}
        exit 0 ;;
    "deb"|"-deb"|"--deb")
        deb_maker ;;
    "clang"|"--clang")
        #if build is not existed, then create it
        test ! -d build && mkdir build

        #compile
        cd build && cmake .. -DCC=clang && make && exit 0 ;;
    "-i"|"i"|"install"|"--install")
        test ! -d build && ($0 ; $0) || $0
        test -d build && cd build 
        test $# -eq 2 && cmake .. -DCMAKE_INSTALL_PREFIX=$2
        make install
        files=`cat install_manifest.txt | grep -v ".*\.h\|.*\.a\|.*\.so"`
        test -n "$files" && cmd_install -i $files
        exit 0 ;;
    "-u"|"u"|"uninstall"|"uninstall")
        files=`cat build/install_manifest.txt | grep -v ".*\.h\|.*\.a\|.*\.so"`
        test -n "$files" && cmd_install -u $files 
        test -r build/install_manifest.txt && (cat build/install_manifest.txt | xargs rm -v) && exit 0
        exit 1 ;;
    "-h"|"h"|"help"|"--help")
        echo -e "\033[1;31mUsage: `basename $0` [c | r | e | d | x | u]\033[0m"
        echo -e "\033[1;31m       `basename $0` [clean | rebuild | del | exec | uninstall]\033[0m"
        echo -e "\033[1;31mUsage: `basename $0` [-c | -r | -e | -d | -x | -u]\033[0m"
        echo -e "\033[1;31m       `basename $0` [--clean | --rebuild | --del | --exec | --uninstall]\033[0m"
        echo -e "\033[1;31mUsage: `basename $0` [i | -i | intall | --install] intall_path\033[0m"
        exit 1 ;;
    *) ;;
esac

case "$cmd" in
    "-e"|"e"|"exec"|"--exec")
        test -d $exec_path && 
            ( 
            test $exec_cnt -eq 1 && 
            (
                echo -e "\033[1;35m---------------------start---------------------\033[0m"
                $exec_path$exec_name $@
                echo -e "\033[1;35m----------------------end----------------------\033[0m"
            ) && exit 0

            test $# -eq 2 && 
            (
                cnt=0
                for name in $exec_name
                do
                    test $cnt -eq $2 && break
                    let cnt=cnt+1
                done

                echo -e "\033[1;35m---------------------$name start---------------------\033[0m"
                $exec_path$name 2>&1
                echo -e "\033[1;35m---------------------$name end----------------------\033[0m"
            ) && exit 0

            for name in $exec_name
            do
                echo -e "\033[1;35m---------------------$name start---------------------\033[0m"
                $exec_path$name 2>&1
                echo -e "\033[1;35m---------------------$name end----------------------\033[0m"
            done
            ) ||
            (
            test -e $exec && \
            echo -e "\033[1;35m$exec_name\033[0m\033[1;31m: has no execute pemission!\033[0m" \
            || echo -e "\033[1;35m$exec_name\033[0m\033[1;31m: is not existed!\033[0m"
            )
        ;;
    "-x"|"x")
        test -e $exec && 
        test ! -x $exec && 
        chmod +x $exec
        ;;
esac
