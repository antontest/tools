#! /bin/bash
# Name : ccmake
# Func : make cmake project 
# Time : 2015-08-24 11:50:54

args_flag=0
name=""
mode=""
# \brief printf usage of shell script
# \param $@ [in] paramters from cmd line
# \return 0, if succ
#        -1, if fail
function print_usage()
{
    echo -e "\e[1;31m#-------------------Shell Usage------------------#"
    echo "Usage  : $(basename $0) [options] project-name"
    echo "Options: "
    echo "     -h,--help    Show usage of shell"
    echo "     -a,--args    Add args dealing when creating main source file"
    echo -e "#-------------------Shell Usage-------------------#\e[0m"
}

# \brief get paramters from cmd line
# \param $@ [in] paramters from cmd line
# \return 0, if succ
#        -1, if fail
function parser_args()
{
    TEMP=`getopt -o ham: --long help,args,mode: \
     	-n 'mksh' -- "$@"`

    if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

    # Note the quotes around `$TEMP': they are essential!
    # set 会重新排列参数的顺序，也就是改变$1,$2...$n的值，这些值在getopt中重新排列过了
    eval set -- "$TEMP"

    # 经过getopt的处理，下面处理具体选项。
    while true ; do
        case "$1" in
            -h|--help) print_usage $@; shift ;;
            -a|--args) args_flag=1 ; shift ;;
            -m|--mode) mode=$2 ; shift 2 ;;
            --) shift ; break ;;
            *) echo "Internal error!" ; exit 1 ;;
        esac
    done

    # get others values
    for arg in $@ ; do
        name="$arg"
    done

    return 0
}

# parser_args
parser_args $@

# test whether input project name
test -z "$name" && 
echo -e "\033[1;31mPlease input project name!\033[0m" && 
exit 1

# test whether project is already existed
test -d $name && 
echo -e "\033[1;31mProject $name is already existed!\033[0m" && 
exit 1

# create project
test -z "$mode" && mode=exec
case "$mode" in
    "exec") cp -r $TOOLS_PATH/cmake/exec/ $name ;;
    "lib"|"shared") cp -r $TOOLS_PATH/cmake/lib/ $name ;;
    *) echo -e "\033[1;31mMode must be exec,lib or share!\033[0m" ; exit 1 ;;
esac

# modify project name
cd $name && scmake -p $name

# modify lib dependence
cd src/ && (scmake -e $name ; 
sed -i "/target_link_lib.*/Is/(.*\ .*)$/($name\ ${name}_static)/g" CMakeLists.txt ;
sed -i "/install\ *(\ *targets.*runtime/Is/targets\ .*runtime/TARGETS $name RUNTIME/Ig" CMakeLists.txt)

test "$mode" = "lib" && ( 
mkdir $name && echo "#include <$name.h>" > $name/${name}.c && cp $C_HEAD_TMP_PATH/usual.h include/${name}.h
sed -i "/^set\ *(lib_src\ /Is/\ .*)$/\ $name\/$name.c)/Ig" CMakeLists.txt ;
sed -i "/^add_library\ *(.*\ /Is/(.*_static\ /(${name}_static /Ig" CMakeLists.txt ;
sed -i "/^set_target_properties.*/Is/(.*_static/(${name}_static/Ig" CMakeLists.txt ;
sed -i "/^set_target_properties.*/Is/output_name\ .*)$/OUTPUT_NAME\ \"$name\")/Ig" CMakeLists.txt ;
sed -i "/\ *install\ *(\ *targets main_.*archive/Is/targets\ .*archive/TARGETS ${name}_static ARCHIVE/Ig" CMakeLists.txt ;
)
# sed -i "/install\ *(\ *files\ *include.*/Is/\ include\/.*dest/\ include\/$name.h DEST/Ig" CMakeLists.txt ;
# sed -i "/install\ *(\ *targets.*archive/Is/targets\ .*archive/TARGETS ${name}_static ARCHIVE/Ig" CMakeLists.txt ;

cd ../..
# make main source
test -d $name/src/main/ && 
cd $name/src/main/ && (
    test $args_flag -eq 1 && 
    (
        mkct -a $name && 
        exit 0 
    ) || 
    (mkct $name && exit 0)
)
