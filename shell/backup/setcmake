#! /bin/bash
# Name : setcmake
# Func : 
# Time : 2015-08-17 14:02:25

file=""
# \brief printf usage of shell script
# \param $@ [in] paramters from cmd line
# \return 0, if succ
#        -1, if fail
function print_usage()
{
    echo -e "\e[1;31m#-------------------Shell Usage------------------#"
    echo "Usage  : $(basename $0) [options] script-name"
    echo "Options: "
    echo "     -h,--help     Show usage of shell"
    echo "     -p,--project  Set CMake project name"
    echo -e "#-------------------Shell Usage-------------------#\e[0m"
}

# \brief get paramters from cmd line
# \param $@ [in] paramters from cmd line
# \return 0, if succ
#        -1, if fail
function parser_args()
{
    TEMP=`getopt -o hp:a:d:e: --long help,project:add:del:exec: \
     	-n 'setcmake' -- "$@"`

    if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

    # Note the quotes around `$TEMP': they are essential!
    # set 会重新排列参数的顺序，也就是改变$1,$2...$n的值，这些值在getopt中重新排列过了
    #eval set -- "$TEMP"

    # 经过getopt的处理，下面处理具体选项。
    while true ; do
        case "$1" in
            -h|--help) print_usage $@; exit 1 ;;
            -p|--project) sed -i "s/\(project\ *(\).*/\1$2)/Ig" $file ; shift 2 ;;
            -e|--exec) sed -i "s/\(^add_execut.*\ *(\)\(.*\)\(\ .*)$\)/\1$2\3)/Ig" $file ; shift 2 ;;
            -a|--add) 
                # Get Mode
                shift
                mode=$1

                # Get values of adding
                shift
                val=$1
                ret=""

                if test "$mode" = "auxsrc" -o "$mode" = "a" ; then
                    if test -n "$(grep -i "^aux_source_dir.*$val" $file)" ; then
                        continue
                    fi
                    line=`grep -i -n 'aux_source_dir' $file | sed -n '$s/\(.*\):.*$/\1/gp'`
                    if test $line -lt 1 ; then
                        exit 1
                    fi
                    srcpath=`sed -n 's/aux_source_dir.*\(\ .*\))$/\1/Ip' $file | head -n 1 | sed 's/\ //g'`
                    while test "${val:0:1}" != "-" -a "$val" != "" 
                    do 
                        sed -i "$line""a AUX_SOURCE_DIRECTORY($val $srcpath)" $file
                        shift
                        val=$1
                        let line=line+1
                    done
                    break
                fi

                while test "${val:0:1}" != "-" -a "$val" != "" 
                do 
                    case "$mode" in
                        "s"|"subdir") str="^add_subdir.*$val\ " ;;
                        "i"|"include") str="^include_dir.*\(($val\ \|\ $val)\|\ $val\ \)" ;;
                        "l"|"link") str="^link_dir.*\(($val\ \|\ $val)\|\ $val\ \)" ;;
                        "t"|"target_lib") str="^target_link_lib.*\(($val\ \|\ $val)\|\ $val\ \)" ;;
                        *) echo "parameters error" ;; 
                    esac

                    if test -z "$(grep -i "$str" $file)"; then
                        ret+=$val" "
                    fi
                    shift
                    val=$1
                done

                # Set Value
                if test -n "$ret" ; then
                    case "$mode" in
                        "s"|"subdir") sed -i "s/^add_subdir.*\ *(/&$ret/Ig" $file ;;
                        "i"|"include") sed -i "s/^include_dir.*\ *(/&$ret/Ig" $file ;;
                        "l"|"link") sed -i "s/^link_dir.*\ *(/&$ret/Ig" $file ;;
                        "t"|"target_lib") sed -i "s/^target_link_lib.*\ *(.*\ /&$ret/Ig" $file ;;
                        *) echo "parameters error" ;; 
                    esac
                fi
                ;;
            -d|--del) 
                # Get Mode
                shift
                mode=$1

                # Get values of adding
                shift
                val=$1
                ret=""

                while test "${val:0:1}" != "-" -a "$val" != "" 
                do 
                    case "$mode" in
                        "a"|"auxsrc") sed -i "/^aux_source_dir.*\ *($val\ .*$/I"d $file ;;
                        "i"|"include") 
                            if test -n "$(grep -i "^include_dir.*($val\ " $file)" ; then
                                sed -i "/^include_dir.*($val\ /Is/($val\ /(/Ig" $file
                            elif test -n "$(grep -i "^include_dir.*\ $val)$" $file)" ; then
                                sed -i "/^include_dir.*\ $val)$/Is/\ $val)$/)/Ig" $file
                            elif test -n "$(grep -i "^include_dir.*\ $val\ " $file)" ; then
                                sed -i "/^include_dir.*\ $val\ /Is/\ $val\ /\ /Ig" $file
                            fi
                            ;;
                        "l"|"link") #sed -i "s/\(^link_dir.*\ *(.*\)\($val \)\(.*$\)/\1\3/Ig" $file ;;
                            if test -n "$(grep -i "^link_dir.*($val\ " $file)" ; then
                                sed -i "/^link_dir.*($val\ /Is/($val\ /(/Ig" $file
                            elif test -n "$(grep -i "^link_dir.*\ $val)$" $file)" ; then
                                sed -i "/^link_dir.*\ $val)$/Is/\ $val)$/)/Ig" $file
                            elif test -n "$(grep -i "^link_dir.*\ $val\ " $file)" ; then
                                sed -i "/^link_dir.*\ $val\ /Is/\ $val\ /\ /Ig" $file
                            fi
                            ;;
                        "t"|"target_lib") #-i sed "s/\(^target_link_lib.*\ *(.*\)\($val \)\(.*\)/\1\3/Ig" $file ;;
                            if test -n "$(grep -i "^target_link_lib.*\ $val)$" $file)" ; then
                                sed -i "/^target_link_lib.*\ $val)$/Is/\ $val)$/)/Ig" $file
                            elif test -n "$(grep -i "^target_link_lib.*\ $val\ " $file)" ; then
                                sed -i "/^target_link_lib.*\ $val\ /Is/\ $val\ /\ /Ig" $file
                            fi
                            ;;
                        "s"|"subdir") #( grep -i "^add_subdir.*\ *(.*$val .*$" $file && sed -i "/^add_subdir.*$val\ /Is/$val\ //Ig" $file ) ;; #|| sed -i "/^add_subdir.*\ *(.*\ $val)$/Is/\ $val)$/)/Ig" $file ;;
                            if test -n "$(grep -i "^add_subdir.*($val\ " $file)" ; then
                                sed -i "/^add_subdir.*($val\ /Is/($val\ /(/Ig" $file
                            elif test -n "$(grep -i "^add_subdir.*\ $val\ " $file)" ; then
                                sed -i "/^add_subdir.*\ $val\ /Is/\ $val\ /\ /Ig" $file
                            fi
                            ;;
                        *) echo "parameters error" ;; 
                    esac
                    shift
                    val=$1
                done
                
                ;;
            --) shift ; break ;;
            *) exit 1 ;;
        esac
    done

    return 0
}

if test $# -lt 1 ; then
    print_usage $@
fi

file=`pwd`/CMakeLists.txt
if test ! -e $file ; then
    echo "CMakeLists.txt does not exist!"
    exit 1 
fi

parser_args $@
