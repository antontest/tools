#! /bin/bash
# Name : ipsec-tools
# Func : ipsec tools 
# Time : 2015-12-07 09:23:08

get_para() {
    ((n=i+1))
    para=${!n}
    test -z "$para" -o "${para:0:1}" = "-" && echo ""
    echo $para && exit $n
}

check_para (){
    test -z "$2" && echo "Option [$1] need parameter!" && exit 1 
}

get_args (){
    for ((i = 1; i <= $#; i++)); do
        ((j=i+1))
        case "${!i}" in
            --showcert)
                showcert=1
                cert=`get_para $@`
                i=$?
                check_para "showcert" $cert
                ;;
            --in)
                cert=`get_para $@`
                i=$?
                check_para "in" $cert
                ;;
            --printcert)
                printcert=1
                cert=`get_para $@`
                i=$?
                check_para "printcert" $cert
                ;;
            --get-issuer)
                get_issuer=1 ;;
            --get-subject)
                get_subject=1 ;;
            --get-serial)
                get_serial=1 ;;
            --get-ocsp)
                get_ocsp=1 ;;
            --get-validity)
                get_validity=1 ;;
            --inform)
                inform=`get_para $@`
                i=$?
                check_para "inform" $inform
                ;;
            --) break ;;
            *) echo "${!i} Internal error!" ; exit 1 ;;
        esac
    done
}

get_args $@
test -z "$inform" && inform=pem
test -z "$showcert" && showcert=0
test -z "$printcert" && printcert=0
test -z "$get_issuer" && get_issuer=0
test -z "$get_subject" && get_subject=0
test -z "$get_serial" && get_serial=0
test -z "$get_ocsp" && get_ocsp=0
test -z "$get_validity" && get_validity=0

test -z "$cert" && echo "Please input certs!" && exit 1
test ! -e $cert && echo "Certificate \"$cert\" does not exist!" && exit 1

if test $showcert -eq 1; then
    openssl x509 -inform $inform -noout -text -in $cert && exit 0
fi

if test $printcert -eq 1; then
    ipsec pki --print --in $cert
fi

if test $get_issuer -eq 1 ; then
    ipsec pki --print --in $cert  | grep issuer | sed "s/^.*:\ *//g" | sed "s/\"//g"
fi

if test $get_subject -eq 1 ; then
    ipsec pki --print --in $cert  | grep subject | sed "s/^.*:\ *//g" | sed "s/\"//g"
fi

if test $get_serial -eq 1 ; then
    ipsec pki --print --in $cert  | grep serial | sed "s/^serial:\ *//g" | sed "s/\"//g"
fi

if test $get_ocsp -eq 1 ; then
    ipsec pki --print --in $cert  | grep OCSP | sed "s/^OCSP URIs:\ *//g" | sed "s/\"//g"
fi

if test $get_validity -eq 1 ; then
    start_num=`ipsec pki --print --in $cert  | grep -n validity | sed "s/\(^[0-9]*\):.*$/\1/g"`
    let end_num=start_num+1
    ipsec pki --print --in $cert | sed "$start_num,${end_num}"p -n | sed "s/^validity:\ *//g" | sed "s/^\ *//g" 
fi
