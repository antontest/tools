#! /bin/bash
# Name : print_head
# Func : printf func declaration 
# Time : 2015-07-31 14:36:49

func=""
file=""
path=""

function parser_args()
{
	TEMP=`getopt -o f:p:h --long func:,path:,help -n 'print_head' -- "$@"`

    if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

    # Note the quotes around `$TEMP': they are essential!
    # set 会重新排列参数的顺序，也就是改变$1,$2...$n的值，这些值在getopt中重新排列过了
    eval set -- "$TEMP"

    #经过getopt的处理，下面处理具体选项。
    while test -n "$1" ; do
        case "$1" in
            -f|--func)  func=$2     ; shift 2;;
            -p|--path)  path=$2     ; shift 2;;
            -h|--help)  echo -e "\e[1;31mprinthead -f function_name -p hfile_path\e[0m" ; exit 0;;
            --) shift ; break ;;
            *) echo "Internal error!" ; exit 1 ;;
        esac
    done

    file=$@

    return 0
}

parser_args $@

if test -z "$path" ; then
   path=. 
fi

if test -z "$file" -a -n "$func" ; then
    hfile=$(find $INCLUDE_PATH/ -iname "*.h" -type f)
    for opt in $hfile 
    do
        rt=$(sed -e '/^\#/d' -e '/^$/d' -e '/\/\*/, /\*\//d' $opt \
            | grep --color=auto $func)
        name=$(basename $opt)
        if test -n "$rt" ; then
            echo -e "\e[1;35m$name\e[0m":   "$rt" | grep --color=auto $func
        fi
    done
    exit 0 
    #find $INCLUDE_PATH/ -iname "*.h" -exec cat {} \; | 
    #    sed -e '/^\#/d' -e '/^$/d' -e '/\/\*/, /\*\//d' $file
    #    | grep --color=auto $func
fi

if test ! -e $file ; then
    echo "File does not exist!"
    exit 1
fi

if test -z "$(echo $file | grep '\.h')" ; then
    echo "This is not a .h file!"
    exit 1
fi

if test -z "$func" ; then
    sed -e '/^\#/d' -e '/^$/d' -e '/\/\*/, /\*\//d' $file 
else
    sed -e '/^\#/d' -e '/^$/d' -e '/\/\*/, /\*\//d' $file \
        | grep --color=auto $func
fi
